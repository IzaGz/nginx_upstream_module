daemon off;
master_process off;
#worker_processes 4;

worker_rlimit_core  500M;

pid logs/nginx.pid;

error_log logs/notice.log  notice;
error_log logs/info.log    info;
error_log logs/crit.log    crit;
error_log logs/debug.log   debug;
error_log stderr;

events {}

http {

    autoindex   off;
    access_log off;

    include       mime.types;
    default_type  application/octet-stream;

    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    client_max_body_size 8m;
    large_client_header_buffers 2 1k;

    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;

    upstream tnt {
      server 127.0.0.1:9999 max_fails=1 fail_timeout=30s;
      keepalive 1;
    }

    server {
        listen 8081 default;

        server_name tnt_test;

        location = /tnt {
          tnt_pass tnt;
        }

        location /echo_2 {
          tnt_http_rest_methods get post put;
          tnt_pass_http_request on;
          tnt_pass tnt;
        }

        location /preset_method {
          tnt_method 'echo_2';
          tnt_pass tnt;
        }

        location = /post_pass_http_request {
          tnt_pass_http_request on;
          tnt_pass tnt;
        }

        location /post_preset_method {
          tnt_method 'echo_2';
          tnt_pass_http_request on;
          tnt_pass tnt;
        }

        location = /echo_2/overflow_rest_api {
          tnt_pass_http_request_buffer_size 30;
          tnt_pass tnt;
          tnt_pass_http_request on;
        }

        location /overflow_post_pass_http_request {
          tnt_pass_http_request_buffer_size 30;
          tnt_method 'echo_2';
          tnt_pass_http_request on;
          tnt_pass tnt;
        }

        location /rest_api_get {
          tnt_http_rest_methods get;
          tnt_pass tnt;
          tnt_pass_http_request on;
        }

        location /echo_2/pure_result_rest {
          tnt_http_rest_methods get;
          tnt_pass tnt;
          tnt_pure_result on;
        }

        location /pure_result_rest {
          tnt_method 'echo_2';
          tnt_http_rest_methods get;
          tnt_pure_result on;
          tnt_pass tnt;
        }

        location /pure_result_rest_skip_count_2 {
          tnt_method 'echo_2';
          tnt_multireturn_skip_count 2;
          tnt_http_rest_methods get;
          tnt_pure_result on;
          tnt_pass tnt;
        }

        location = /post_pure_result {
          tnt_pure_result on;
          tnt_pass tnt;
        }

        location = /post_pure_result_skip_count_1 {
          tnt_pure_result on;
          tnt_multireturn_skip_count 1;
          tnt_pass tnt;
        }

    }
}
